# 自定义机场文件 (实验性功能!)
# 汉化者:CCA9999 在本文件说明中添加了一部分自己的理解，如果有能力的话可以结合原版一起看，如果翻译有问题欢迎反馈到:qq3472088314@sina.cn
# 翻译项目公开地址:https://github.com/bmjlgenhao2/customAirport_cn/
# 鸣谢列表:Berlin N , MU2132
# 在编辑这个文件之前 , 请保存一份副本 , 并作为参考
# 在Windows上 , 请把本文件放在游戏中的 /locations/ 文件夹里.
# 在安卓系统上 (4.4+),请把它放在 /storage/emulated/0/Android/data/com.dirgtrats.endlessatc/files/里.
# 复制 , 编辑 , 使用和共享自定义机场文件的后果自负!
# 汉化版本:1.3.000.E000(2020.7.12 20:43)

# 本文件有很多注释 (以#开头),以用作指导. 删除注释下面[airport1]部分中的'code ='项目，以使机场出现在游戏中。

# 这个文件有许多段 [sections] (但大部分不是必须的), 他们的名字是:
# [airspace]: 空域配置文件
# [airport1]: 主要机场
# [airport2]: 可选的第二个机场
# [area1]: 可选的限制区域
# [configurations]: 可选的跑道使用配置
# [transition1]: 可选的跑道转换路线(此处汉化存疑)
# [planetypes]: 可选的自定义飞机
# [scenario]: 可选的非随机管制(此处汉化存疑)

# 每一个项目都可能有一个或多个参数. 它的格式/顺序会在下一行中的 '##' 后说明.
# 参数使用英文逗号分割. 多行的参数 (列表) 必须在每行开头和每一列中间添加tab(制表符)因此配置文件必须在电脑上进行编辑.
# 此文件在'<>'中的选项是可选的(不包括'<>'本身).
# 如果游戏没有正常加载参数,或者您不想设置此参数,那么'#'可以将属性归零,游戏会自动使用默认值.
# 位置必须以x , y坐标表示(以海里为单位)，0,0为屏幕中心, 20.1 , 12.82位于左上角，
# 或在纬度，经度坐标中 , 必须始终以N / W / S / E前缀开头，例如N40.7128，W74.0060或S049.43.45.000，E002.09.51.000 (DMS表示法).
# 当磁场变化被定义时 , 横向/纵向坐标(和真实航向)会自动旋转 ; 这是为了使雷达显示与磁北对齐，因为航向360在雷达上是一条垂直的线.
# x, y坐标是屏幕坐标,不跟随磁场变化旋转.
# 不管怎样 , 所有位置都由两个值组成 , 用逗号分隔 . 你想使用x，y还是经纬度坐标，这取决于你自己.
# 对于真实世界的数据 , 在互联网上搜索实际的经纬度坐标可能更容易. 而对于屏幕上的文本标签或自行创造的机场,X,Y坐标可能会使创建更简单.
# 在游戏中按左Ctrl键可显示鼠标的当前坐标 . 这些值也会复制到Windows剪贴板中(根据译者在2020.7.11翻译时测试发现本功能似乎暂不可用).


##############################################################
[airspace]
##############################################################

radius = 30			; 空域半径(海里)
zoom = 7.0 			; 默认缩放级别,增大以放大
elevation = 13 			; 地面高度
floor = 1500 			; 最低可选择高度
descendaltitude = 7000 		; 出现在雷达中的最低初始高度
ceiling = 9000 			; 最大可选择高度
above = 12000 			; SID最大高度 (above ceiling)(这里不知道怎么翻译)
transition = 18001		; 过渡最低高度(过渡:这里个人理解是经过机场而不落地/起飞)(单位为英尺,显示为FL)
speedrestriction = 15, 220 	; 速度限制(半径以海里为单位，速度以节为单位)
usa = true			; 美式呼号发音或跑道名称true为打开)
metric = false			; 以米而不是英尺显示高度(true为打开)
center = N50.1234, E2.0060	; 雷达中心的纬度/经度位置(在此文件中的其他位置使用纬度/经度坐标时需要)
magneticvar = 2.0		; 磁方差; east=positive (用于旋转纬度/经度坐标(如果在下面定义))
#此处汉化存疑

beacons =
	vor,	0,	-3,	0,	main v-o-r
	bco,	18.6,	6.8,	090,	beacon two
	trd,	N50.0, E2.1,	-090,	the third one
## 名字, 坐标, <holdingheading>, <发音> (后两个不知道怎么汉化)
# 第一个信标将成为飞机进入机场时前往的默认航点
# 当HoldingHeading为0或者省略时,飞机将会在到达航点后原地盘旋
# 当HoldingHeading有数值, 飞机到达航点后将会向那个航向 (或磁航向) 飞 (此处汉化存疑)
# 当HoldingHeading为负时，飞机将向左转而不是向右转

line1 = 
	10, 10
	10, 40
	40, 40
	40, 10
	10, 10
## 坐标
# 可选的绿色海岸线点列表

line2 = 
	-15, 0
	-22, 0
	-22, -12.23
	-15, -14
	-15, 0


##############################################################
[airport1]
##############################################################

name = Example Airport		; 机场名
#code = EXAM			; 四字码, 会显示在机场列表中 (必需)(正式创建时请将此行最前面的一个'#'去掉

runways = 
	rwy1,	36,	-4.3,	3.23,	360.0,	11400,	0,	0,	100,	3,	360.0,	3,	180.0,	YY,	8.0,	ZZ,	8.5
## 标识, 名称, 坐标, 真实的角度, <长度>, <displaced>, <displaced2>, <海拔>, <下滑道>, <航向信标>, <下滑道2>, <航向信标2>, <信标名, 距离>, <信标名2, 距离2>
# 其中标识符是用于定义跑道使用情况配置的唯一名称
# 跑道号是一位或者两位数字，可以选择后缀L，R或C字符
# position 是跑道起点的位置 (包括displaced的起点)
# 长度是以英尺为单位
# displaced 跑道长度为英尺 (用于降落), displaced2 是用于跑道的另一头
# 海拔以英尺为单位 , 且必须与上述空域高度差在1000英尺以内
# 下滑道是以度为单位的角度 , 默认值为3
# 航向信标是着陆前ILS的真实航向 , 默认情况下 , 它与跑道的真实航向相同 , 但允许有小的偏移
# 信标是航向信标上距离一定距离(以海里为单位)的点
# 当跑道反向使用时 ， 第二个信标是航向信标上的一个点(反向的)

climbaltitude = 5000 		; 起飞时最大爬升高度(英尺)

sids = 
	north,	0,	25,	northbound
	south,	0,	-25,	southbound
	bco
## 名字, 地点, <声音>
# SID的信标列表
# 您也可以只从信标列表中给出一个信标的名称

entrypoints = 
	090
	270,	bco
## 航向, <信标>
# 这是新抵达的飞机从边界进入的地方(大约) ,例如090表示飞机将从东方进入 ,航向270(向西)
# 进场信标是可选的，从上面的信标列表中选择一个信标名称 ，否则将自动选择该列表中的第一个信标

airlines =
	air,	3,	a333/e175,	airliner,	w
	air,	2,	dh8d,		airliner,	e
	ph-abc,	1,	c271,		0,		nwe
	n-123ab,1,	f200
## 名字, 数量, 飞机类型, 发音, <方向>
# 名称是3个字母的航空公司代码 ,或自己重新分配(带有航班号码,破折号(-),就是这个格式)
# 数量决定了出现的相对可能性(例如0=从不 ,1=偶尔 ,10=频繁 ,等等)
# 飞机类型决定了飞机的特征 ,在多个类型之间加一个破折号（/) ,以便随机选择类型
# 发音是指航班的呼号,用于航空公司
# 方向是指飞机到达/离开(大致)一个首选方向;
# 以包含一个或多个字母nwse的字符串形式给出方向 ,表示西北-东南,
# 但要确保在这些方向(大约)定义了跑道头的方向；w需要接近270的入口点

##############################################################
[airport2]
##############################################################

name = Secondary Airport	; 第二个机场的名称
code = SC			; 两个字母的代码,将添加到跑道和飞机上

runways =
	rwy2,	06,	6.7,	-3.5,	60.0,	1.88,	0,	0,	100,	3,0,3,0,	WL,	8.0
## 标识符, 名称, 位置, 角度, <长度>, <displaced>, <displaced2>, <海拔>, <下滑道>, <航向信标>, <下滑道2>, <航向信标2>, <信标名, 距离>, <信标名2, 距离2>
# 标识符必须是所有跑道中唯一的

traffic = 5			; 每个活动跑道在飞机之间的平均时间(以分钟为单位)(但在较高的流量时会减少)(此处翻译存疑)
inboundbeacon = bco		; 信标名称,用于落地飞机(在上面的信标列表中选择一个)
entrypoints =
	300
	330
## 仅航向

airlines =
	jet,		2,	b735,	jetliner
	n-12345,	1,	c271

climbaltitude = 3000	; 出发时最大初始爬升高度(英尺)

sids =
	north
	south
	west,	-25,	0,	westbound
	bco
## 名字, 坐标, <发音>
# 您也可以只给出信标列表中的信标名称,或者来自airport1 SID列表中的SID名称

# 你可以添加更多的机场(例如[airport3]等等)但是格式必须和[airport2]保持一致

##############################################################
[area1]
##############################################################
shape = circle		; 圆形或者多边形(填circle或者polygon)
altitude = 3000		; 最小允许高度(英尺)
name = SC		; <名称,如果省略,则只有进入主要机场(airport1)的飞机才可以进入该区域>
radius = 6		; 圆形的半径(单位是海里)
position = 7, -3.6	; 圆形区域的中心坐标
labelpos = 6, 0		; <标签位置>
draw = 0, 5.9		; <可见弧的起始角和结束角,以弧度为单位（向东）,如果填写了此项,则本区域将不是一个完整的圆>


##############################################################
[area2]
##############################################################
shape = polygon		; 圆形或者多边形(填circle或者polygon)
altitude = 3500		; 最小允许高度(英尺)
#name = X		; <名称,如果省略,则只有进入主要机场(airport1)的飞机才可以进入该区域,如果不省略,请将本行开头的'#'删去>
draw = 1		; <多边形末端的不可见线数，对于完整多边形忽略>(此处翻译存疑)
labelpos = -3.1, 10.9	; <标签的地址>
points =
	-8.1,	13.3
	0,	13
	-1,	-4
	-7.6,	-4
	-9.0,	10
## 位置
# 最后一个点将自动连接到第一个点
# 注意：多边形必须是凸的,例如矩形,才能正常工作(不能有点是向内的)
# 您可能需要将非凸形状拆分为带有一些不可见线的更简单的凸多边形
# 每个多边形必须有自己的[area]部分,格式参考[area2]


##############################################################
[configurations]
##############################################################

config1 =
	0,	rwy1,	landstart
	7,	rwy1,	startland,	020,	nosid
	8,	rwy2,	startlandrev
## 分数, 标识符, 使用方式, <offsetheading>, <nosid>
# 分数是当跑道激活后获得的分数(技能)
# 标识符是前面指定的唯一跑道名称
# use是一个字符串(不带空格),可能包含以下单词：start,land,rev,int,track
# 其中rev表示反向使用,int表示交叉进离场(起飞沿跑道开始30%),track表示着陆后再起飞(此处翻译存疑)
# offsetheading是指飞机起飞后将飞行一个特定的航向(特别是在允许平行起飞时有不同的航向)
# nosid选项意味着飞机将在给定的offsetheading起飞,SID模式被禁用(设置为空或者'nosid')
# 当跑道配置被忽略时,自动创建这两个配置,每个跑道方向一个,所有跑道激活

config2 =
	0,	rwy1,	landstartrev
	7,	rwy1,	startlandrev,	200,	nosid
	8,	rwy2,	startland


##############################################################
[transition1]
##############################################################

runway = rwy1,	rev					; 跑道标识符, <是否允许反向使用(是的话填rev,否的话不填)>
beacon = lima,	1,	18,	0,	lima		; (可选)信标启用导航模式;定义信标,或从上面的信标列表中选择一个名称
route1 = 
	100
	-3,	22,	5500,	210
	1,	22
	1,	18,	4000
	-3,	18, 	0,	180
	10.5,	3000,	200
# 路线的第一项是从平面到信标的方位;如果定义了多条路线,则最近的方位定义了选择哪条路线
# 下一行是可选的航路点: ## 位置, <最大高度>, <最大速度>
# 最后一行是ILS截获点: ## 与跑道入口的距离(海里), <最大高度>, <最大速度>

route2 = 
	240
	1,	18,	4000
	-3,	18, 	0,	180
	10.5,	3000,	200

route3 = 
	020
	1,	10
	1,	18,	4000
	-3,	18, 	0,	180
	10.5,	3000,	200

# 同一条跑道可以使用多个[transition](过渡)段


##############################################################
[planetypes]
##############################################################
types = 
	f200, 5, 140, 230, 2.9, 3.2, 1400, 1600, 115, 125, 1.1, 1.2, big jet
	c271, 6, 90, 120, 2.9, 3.2, 1400, 1600, 90, 105, 1.1, 1.2, singleprop
## type, category, minspeed, maxspeed, minturnrate, maxturnrate, mindescendrate, maxdescendrate, minfinalapproachspeed, maxfinalapproachspeed, minaccelrate, maxaccelrate, <manufacturer>
# 定义飞机类型,当在上面的航空公司列表中指定自定义类型时非常有用,或者替代默认类型属性
# 类型代表了飞机的重量: 1 到 6, 意思是:super=1, heavy, lowerheavy(个人理解类似757那种), uppermedium(个人理解类似737,320), lowermedium(个人理解crj,erj), light(个人理解172之类的)=6
# turnrate代表飞机的转弯角度(单位为度,时间为秒)
# descendrate代表下降率(以英尺/分钟为单位)
# accelrate代表加速度(以节/秒为单位)
# 制造商名称是可选的,仅在前面开启美式发音(usa)下用于私人呼号发音


##############################################################
[scenario]
##############################################################
finish = 2		; 完成本机场所需落地的飞机数量

events = 
	0,	config,	1
	0,	score,	6
	0,	wind,	180,	10
	0,	cloud,	-1,	25
	0,	cloud,	-2,	24
	0,	cloud,	-4,	24
	0,	dep,	rwy1,	north,	f200
	0,	elapse, 20
	0,	arr,	230,	vor,	f200
	0,	elapse, 100
	5,	arr,	90,	bco,	f200
	40,	dep,	rwy1,	north,	f200
	70,	dep,	rwy1,	south,	a333
	20,	score,	8
	90,	dep,	rwy1,	north
	0,	wind,	200,	8
	0,	cloud,	19,	-26.5
	50,	dep,	rwy1,	west,	f200
	1,	text,	Hello!
	5,	arr,	210,	vor,	a333,	15000,	6000,	300,	0,	0,	1,	air
	10,	arr,	090,	0,	0,	0,	0,	0,	0,	0,	0,	0,	sc
	10,	dep,	rwy2,	north
## 上一事件后经过的时间(秒),事件类型,属性
# 可用事件类型：arr,dep,score,elapse,wind,cloud,config,text
## arr: 入口点,<前往的行点>, <飞机类型>, <高度>, <目标高度>, <速度>, <延误时间>, <油量>, <紧急情况>, <呼号>, <目的地>	; 进场 (燃油计数增加; 油量5000+会报出燃油不足, 紧急情况填1表示医疗紧急情况, 2表示引擎损坏, 目的地填除主机场外的其他机场的二字码)
## dep: 跑道标识符, SID, <飞机类型>, <紧急情况>, <呼号>								; 飞机起飞
## score: 分数			; 设置较高的分数来打开更多跑道,更低的分数来关闭部分跑道
## elapse: (时间:秒)		; 事件之间经过的模拟时间(仅用于在开始之前构建流量,因此在时间0时)
## wind: 角度, 速度		; 设置风(改变风向时最好小幅度更改航向)
## cloud: 坐标		; 添加半径为1海里的云,最好添加在空域外,以避免事件的发生,除非时间为0
## config: entry		; change to different runway config, as specified in the rwy configurations section
## text: 消息		; 在屏幕顶部显示黄色文本
